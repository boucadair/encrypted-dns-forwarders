



network                                                         T. Reddy
Internet-Draft                                                     Nokia
Intended status: Informational                              M. Boucadair
Expires: 1 March 2025                                             Orange
                                                                 D. Wing
                                                    Cloud Software Group
                                                          28 August 2024


 Identifying and Authenticating Home Servers: Requirements and Solution
                                Analysis
                     draft-rbw-home-servers-latest

Abstract

   Obtaining CA-signed certificates for servers within a home network is
   difficult and causes problems at scale.  This document explores
   requirements to improve this situation and analyzes existing
   solutions.

Discussion Venues

   This note is to be removed before publishing as an RFC.

   Discussion of this document takes place on the Adaptive DNS Discovery
   Working Group mailing list (add@ietf.org), which is archived at
   https://mailarchive.ietf.org/arch/browse/add/.

   Source for this draft and an issue tracker can be found at
   https://github.com/boucadair/encrypted-dns-forwarders.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 1 March 2025.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Scope
   3.  Requirements
   4.  Non-Requirements
   5.  Analysis of Solutions to Requirements
     5.1.  Normal Certificates
     5.2.  Delegated Credentials
     5.3.  Name Constraints
     5.4.  ACME Delegated Certificates
     5.5.  Raw Public Keys
     5.6.  Self-signed Certificate
     5.7.  Local CA: Certification Authority Built Into CPE
   6.  Security Considerations
   7.  IANA Considerations
   8.  Informative References
   Appendix A.  Example of Delegated Certificate Issuance
   Acknowledgments
   Authors' Addresses

1.  Introduction

   This document describes the problem encountered to host servers in a
   home network and how to connect to those servers using an encrypted
   transport protocol such as TLS or DTLS.  It also identifies a set of
   requirements and discusses to what extent existing solutions can (or
   can't) meet these requirements.

2.  Scope

   This document describes the current state of the art for deploying
   encrypted servers within the home.  New mechanisms should be
   described in separate documents.

   There are three types of equipment:

   *  legacy local equipment which lacks memory, CPU, or sufficient
      security to reasonably support an encrypted transport protocol and
      associated key management.  An example is a 10 year old router
      with built-in 802.11n Wi-Fi.  This type of equipment is out of
      scope.

   *  high functioning local equipment that provides sufficient hardware
      and software capability to support an encrypted transport protocol
      and associated key management.  An example is a printer, NAS, or
      higher-end consumer router.

   *  high functioning virtualized equipment, where some functions are
      provided via local or remote software.  An example is virtualized
      CPE (vCPE).

3.  Requirements

   With automated certificate enrollment and renewal [ACME], a public
   Certification Authority can sign a certificate for each CPE.  This
   causes a few issues:

   *  In case of large scale of CPEs (e.g., millions of devices),
      issuing certificate request for a large number of subdomains could
      be treated as an attack by the certificate authorities to
      overwhelm it.  This can be resolved with contracts and payment but
      all of these problems are barriers to moving to another
      certificate authority.

   *  Dependency on the CA to issue a large number of certificates,
      which causes CA availability to impact service availability.

   *  If the CPE uses one of its WAN IP addresses to obtain the
      certificate for the FQDN, the Internet-facing HTTP server or a DNS
      authoritative server on the CPE to complete the HTTP or DNS
      challenge can be subjected to attacks.  To avoid this exposure,
      and to accomodate environments where the CPE cannot obtain a
      public IP address (e.g., CGN), a vendor-operated service would
      need to obtain the signed certificate on the CPE's behalf.

   For these reasons, it is desirable to reduce the need for a public
   CA.

   R-REDUCE-CA:  Reduce the use of a public Certification Authority.

   Taking an additional step from the previous requirement, eliminating
   running one's own Certification Authority would avoid the
   complexities of certificate management.

   R-ELIMINATE-CA:  Eliminate using Certification Authorities for each
      CPE.

   The ability to immediately deploy using existing Certification
   Authorities is important to evaluate.

   R-SUPPORT-CA:  Existing support by Certification Authorities.

   The ability to immediately deploy on clients is important to
   evaluate.

   R-SUPPORT-CLIENT:  Existing support client libraries or client
      software intances.

4.  Non-Requirements

   End users are extremely unlikely to contact the device vendor or
   their ISP if a CPE device is replaced (stolen, upgraded, etc.).
   Rather, the user will replace the CPE and configure their client
   devices (laptops, smartphones, IoT devices, etc.) to authorize the
   new CPE.  As part of that configuration, the client device can refuse
   to authorize the previous CPE.  While this does leave the client
   devices open to attack by the previous (stolen) CPE, the attacker
   would also need to have access to the victim's physical network or
   broadcast a strong enough Wi-Fi signal to the victim's clients.

   NR-REVOKE:  Do not provide certificate revocation.

5.  Analysis of Solutions to Requirements

   This section describes several solutions which can meet some of the
   requirements.  This is first summarized in Table 1 and detailed in
   the following subsections.

   +==============+==========+===========+============+================+
   |     Solution |  Reduce  | Eliminate |  Existing  |    Existing    |
   |              |    CA    |     CA    | CA Support |     Client     |
   |              |          |           |            |    Support     |
   +==============+==========+===========+============+================+
   |       Normal |    No    |     No    |    Yes     |      Yes       |
   | certificates |          |           |            |                |
   +--------------+----------+-----------+------------+----------------+
   |    Delegated |   Yes,   |     No    |     No     |    No, (*)     |
   |  credentials | somewhat |           |            |                |
   +--------------+----------+-----------+------------+----------------+
   |         Name |   Yes    |     No    |     No     |       No       |
   |  constraints |          |           |            |                |
   +--------------+----------+-----------+------------+----------------+
   |         ACME |    No    |     No    |    Yes     |      Yes       |
   |    delegated |          |           |            |                |
   | certificates |          |           |            |                |
   +--------------+----------+-----------+------------+----------------+
   |   Raw Public |   Yes    |    Yes    |    n/a     |   Some, (*)    |
   |         Keys |          |           |            |                |
   +--------------+----------+-----------+------------+----------------+
   |  Self-Signed |   Yes    |    Yes    |    n/a     |   Yes, poor    |
   |  Certificate |          |           |            |   experience   |
   +--------------+----------+-----------+------------+----------------+
   |        Local |    No    |     No    |    Yes     |      Yes       |
   |  Certificate |          |           |            |                |
   |    Authority |          |           |            |                |
   +--------------+----------+-----------+------------+----------------+

                   Table 1: Summary of Solution Analysis

5.1.  Normal Certificates

   This solution has the CPE requests a (cloud) server to obtain a
   certificate for the CPE from a public CA.  This solution is deployed
   in production by Mozilla [https-local-dom], McAfee, and Cujo.  Today,
   this is best practice.  However, it suffers from the dependency on
   both the public Certification Authority and the vendor's service
   (necessary because the CPE cannot always obtain a publicly-accessible
   IPv4 address necessary to get an ACME-signed certificate itself),
   which are necessary for both initial deployment and for certificate
   renewal.  One standard for such a system is [PKIX-EST].

   R-REDUCE-CA: no

   R-ELIMINATE-CA: no

   Both CAs and clients already support the normal mode of operation.

   R-SUPPORT-CA: yes

   R-SUPPORT-CLIENT: yes

5.2.  Delegated Credentials

   Delegated credentials [RFC9345] allows the entity operating the CPE
   (e.g., vendor or ISP) to sign a 7-day validity for the CPE's public
   key.  The frequency of CA interactions remains the same as with
   normal certificates (Section 5.1), but the interactions are with the
   vendor's service rather than the public CA.

   As currently specified in [RFC9345], the same name would be issued to
   all CPEs making it impossible to identify whether the delegated
   credential is issued to the intended CPE or an "evil-twin" CPE.  This
   drawback can be corrected by enhancing [RFC9345] to include a string
   that uniquely identifies the delegated credential (e.g., including
   hash of customer id or other unique identifier in the FQDN such as
   "HASH.cpe.example.com").

      For the sake of simplifying the analysis, this document assumes
      such an enhancement to [RFC9345] has been standardized and
      deployed.

   R-REDUCE-CA: yes, somewhat by moving CA signing from public CA to a
   vendor- or ISP-operated service.

   R-ELIMINATE-CA: no

   Delegated credentials have no existing support by CAs.  Clients need
   to support Section 4.1.1 of [RFC9345] which requires sending an
   extension in their TLS 1.3 ClientHello.  The only client supporting
   delegated credentials is Firefox.

   R-SUPPORT-CA: no

   R-SUPPORT-CLIENT: no, only supported by Firefox

5.3.  Name Constraints

   Name constraints (Section 4.2.1.10 of [RFC5280]) allows the entity
   operating the CPE (e.g., vendor or ISP) to obtain a certificate from
   a public Certification Authority for a subdomain (dNSName) which is
   then used to sign certificates for each CPE.  For example, the
   network "example.net" could obtain a name constrained certificate for
   ".cpe.example.net" and then issue its own certificates such as
   "customer-123.cpe.example.net".

   R-REDUCE-CA: yes, it reduces interaction with public CAs but has same
   number of interactions with the CPE operator's CA.

   R-ELIMINATE-CA: no

   Name constraints have no existing support by CAs or by clients.

   R-SUPPORT-CA: no

   R-SUPPORT-CLIENT: no

5.4.  ACME Delegated Certificates

   ACME Delegated Certificates [RFC9115] allows the CPE to use a vendor-
   operated service to obtain a CA-signed ACME delegated certificate.
   It allows the CPE to request from a service managing the CPE, acting
   as a profiled ACME server, a certificate for a delegated identity,
   i.e., one belonging to the CPE.  The CPE then uses the ACME protocol
   (with the extensions described in [RFC8739]) to request issuance of a
   short-term, Automatically Renewed (STAR) certificate for the same
   delegated identity.  The generated short-term certificate is
   automatically renewed by the public CA, is periodically fetched by
   the CPE.

   R-REDUCE-CA: No

   R-ELIMINATE-CA: No

   ACME delegated certificates do not require changes to client
   authentication libraries or operation.

   R-SUPPORT-CA: Unknown

   R-SUPPORT-CLIENT: yes

5.5.  Raw Public Keys

   Raw public keys (RPK) [RFC7250] can be authenticated out-of-band or
   using trust on first use (TOFU).  For a small network, this can be
   more appealing than a local or remote Certification Authority signing
   keys and dealing with certificate renewal.

   R-REDUCE-CA: yes

   R-ELIMINATE-CA: yes

   RPKs have been supported by OpenSSL and wolfSSL since 2023 and by
   GnuTLS since 2019.  However, RPKs are not supported by browsers or by
   curl.

   R-SUPPORT-CA: n/a, this system does not use Certification Authorities
   at all.

   R-SUPPORT-CLIENT: Some; all major libraries support RPK, but clients
   (browsers and curl) do not support RPK.  Further, DNR and DDR in
   verified discovery mode expect to encounter certificates and do not
   support RPK.

5.6.  Self-signed Certificate

   A self-signed certificate requires the client to authorize the
   connection, which is usually a "click OK to continue" dialog box and
   is a trust on first use (TOFU) solution.  While it is possible the
   user verifies the certificate matches expectations, this seldom
   occurs.  The certificate warnings are normalized by users which
   weakens security overall.

   R-REDUCE-CA: yes, public CA's are not used at all.

   R-ELIMINATE-CA: yes

   Existing clients support self-signed certificates fairly well, but
   the user experience with clients is poor: some clients can't remember
   to trust a certificate and clicking through certificate warnings will
   become normalized.

   Modifying self-signed certificate handling for ".local" [RFC6761] or
   ".internal" [I-D.davies-internal-tld] might be worth further study.

   R-SUPPORT-CA: n/a, this system does not use Certification Authories
   at all.

   R-SUPPORT-CLIENT: Yes, but poor user experience.

5.7.  Local CA: Certification Authority Built Into CPE

   The CPE would be a CA capable of signing certificates for other in-
   home devices.  The CA in the CPE would be limitied to signing only
   certificates belonging to that home network (using Sections 5.2 or
   5.3).  This allows the CPE to sign certificates for other devices
   within the network such as printers, IoT devices, NAS devices,
   laptops, or anything else needing to be a server on the local
   network.

      This feature is beyond the scope of the ADD working group but is
      mentioned because it was suggested during an ADD meeting.

   R-REDUCE-CA: yes, it reduces interaction with public CAs but has same
   number of interactions with the CPE operator's CA for the CPE itself.
   For other devices within the home network (e.g., printers), it
   eliminates interaction with the vendor's CA.

   R-ELIMINATE-CA: no

   While technically the industry could build such a system, building
   such a system across the ecosystem of client operating systems would
   be a daunting task.

   R-SUPPORT-CA: yes

   R-SUPPORT-CLIENT: yes

6.  Security Considerations

   TBD.

7.  IANA Considerations

   This document has no IANA actions.

8.  Informative References

   [ACME]     Barnes, R., Hoffman-Andrews, J., McCarney, D., and J.
              Kasten, "Automatic Certificate Management Environment
              (ACME)", RFC 8555, DOI 10.17487/RFC8555, March 2019,
              <https://www.rfc-editor.org/rfc/rfc8555>.

   [https-local-dom]
              Thomson, M., "HTTPS for Local Domains", April 2021,
              <https://docs.google.com/document/
              d/170rFC91jqvpFrKIqG4K8Vox8AL4LeQXzfikBQXYPmzU>.

   [I-D.davies-internal-tld]
              Davies, K. and A. McConachie, "A Top-level Domain for
              Private Use", Work in Progress, Internet-Draft, draft-
              davies-internal-tld-00, 2 August 2024,
              <https://datatracker.ietf.org/doc/html/draft-davies-
              internal-tld-00>.

   [I-D.reddy-add-delegated-credentials]
              Reddy.K, T., Boucadair, M., Wing, D., and S. Jain,
              "Delegated Credentials to Host Encrypted DNS Forwarders on
              CPEs", Work in Progress, Internet-Draft, draft-reddy-add-
              delegated-credentials-03, 1 December 2023,
              <https://datatracker.ietf.org/doc/html/draft-reddy-add-
              delegated-credentials-03>.

   [PKIX-EST] Pritikin, M., Ed., Yee, P., Ed., and D. Harkins, Ed.,
              "Enrollment over Secure Transport", RFC 7030,
              DOI 10.17487/RFC7030, October 2013,
              <https://www.rfc-editor.org/rfc/rfc7030>.

   [RFC5280]  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,
              Housley, R., and W. Polk, "Internet X.509 Public Key
              Infrastructure Certificate and Certificate Revocation List
              (CRL) Profile", RFC 5280, DOI 10.17487/RFC5280, May 2008,
              <https://www.rfc-editor.org/rfc/rfc5280>.

   [RFC6761]  Cheshire, S. and M. Krochmal, "Special-Use Domain Names",
              RFC 6761, DOI 10.17487/RFC6761, February 2013,
              <https://www.rfc-editor.org/rfc/rfc6761>.

   [RFC7250]  Wouters, P., Ed., Tschofenig, H., Ed., Gilmore, J.,
              Weiler, S., and T. Kivinen, "Using Raw Public Keys in
              Transport Layer Security (TLS) and Datagram Transport
              Layer Security (DTLS)", RFC 7250, DOI 10.17487/RFC7250,
              June 2014, <https://www.rfc-editor.org/rfc/rfc7250>.

   [RFC8555]  Barnes, R., Hoffman-Andrews, J., McCarney, D., and J.
              Kasten, "Automatic Certificate Management Environment
              (ACME)", RFC 8555, DOI 10.17487/RFC8555, March 2019,
              <https://www.rfc-editor.org/rfc/rfc8555>.

   [RFC8739]  Sheffer, Y., Lopez, D., Gonzalez de Dios, O., Pastor
              Perales, A., and T. Fossati, "Support for Short-Term,
              Automatically Renewed (STAR) Certificates in the Automated
              Certificate Management Environment (ACME)", RFC 8739,
              DOI 10.17487/RFC8739, March 2020,
              <https://www.rfc-editor.org/rfc/rfc8739>.

   [RFC9115]  Sheffer, Y., López, D., Pastor Perales, A., and T.
              Fossati, "An Automatic Certificate Management Environment
              (ACME) Profile for Generating Delegated Certificates",
              RFC 9115, DOI 10.17487/RFC9115, September 2021,
              <https://www.rfc-editor.org/rfc/rfc9115>.

   [RFC9345]  Barnes, R., Iyengar, S., Sullivan, N., and E. Rescorla,
              "Delegated Credentials for TLS and DTLS", RFC 9345,
              DOI 10.17487/RFC9345, July 2023,
              <https://www.rfc-editor.org/rfc/rfc9345>.

Appendix A.  Example of Delegated Certificate Issuance

   Let's consider that the customer router, needing a certificate for
   its HTTPS-based management, is provisioned by a service (e.g., ACS)
   in the operator's network.  Also, let's assume that each CPE is
   assigned a unique FQDN (e.g., "cpe-12345.example.com" where 12345 is
   a unique number).

      It is best to ensure that such an FQDN does not carry any
      Personally Identifiable Information (PII) or device identification
      details like the customer number or device's serial number.

   The CPE generates a public and private key-pair, builds a certificate
   signing request (CSR), and sends the CSR to a service in the operator
   managing the CPE.  Upon receipt of the CSR, the operator's service
   can utilize certificate management protocols like ACME [RFC8555] to
   automate certificate management functions such as domain validation
   procedure, certificate issuance, and certificate revocation.

   The challenge with this technique is that the service will have to
   communicate with the CA to issue certificates for millions of CPEs.
   If an external CA is unable to issue a certificate in time or replace
   an expired certificate, the service would no longer be able to
   present a valid certificate to a CPE.  When the service requests
   certificate issuance for a large number of subdomains (e.g., millions
   of CPEs), it may be treated as an attacker by the CA to overwhelm it.
   Furthermore, the short-lived certificates (e.g., certificates that
   expire after 90 days) issued by the CA will have to be renewed
   frequently.  With short-lived certificates, there is a smaller time
   window to renew a certificate and, therefore, a higher risk that a CA
   outage will negatively affect the uptime of the encrypted DNS
   forwarders on CPEs (and the services offered via these CPEs).

   These challenges can be addressed by using protocols like ACME to
   automate the certificate renewal process, ensuring certificates are
   renewed well before expiration.  Additionally, incorporating another
   CA as a backup can provide redundancy and further mitigate the risk
   of outages.  By having a secondary CA, the service can switch to the
   backup CA in case the primary CA is unavailable, thus maintaining
   continuous service availability and reducing the risk of service
   disruption.

   It offers the additional advantage of improving the security of
   Browser and CPE interactions.  This ensures that HTTPS access to the
   CPE is possible, allowing the device administrator to securely
   communicate with and manage the CPE.

Acknowledgments

   This draft is the result of discussions at IETF119 and IETF120 in the
   ADD working group.  Thanks to all the participants at the microphone,
   hallways, and mailing list.

   Acknowledgements from [I-D.reddy-add-delegated-credentials]:  Thanks
      to Neil Cook, Martin Thomson, Tommy Pauly, Benjamin Schwartz, and
      Michael Richardson for the discussion and comments.

Authors' Addresses

   Tirumaleswar Reddy
   Nokia
   Bangalore
   Karnataka
   India
   Email: kondtir@gmail.com


   Mohamed Boucadair
   Orange
   35000 Rennes
   France
   Email: mohamed.boucadair@orange.com


   Dan Wing
   Cloud Software Group Holdings, Inc.
   Email: danwing@gmail.com
